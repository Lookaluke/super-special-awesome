#summary Class an API design here
#labels Featured,Phase-Design,Phase-Implementation

= Class design =

This is really important, so spend a lot of time perfecting this


== public class Pokemon ==

=== Description ===

This class will store:
  * name
  * level (and experience)
  * attack
  * defense
  * special
  * speed
  * image
  * moves
  * element 1
  * element 2

Methods that return most of the data.  A method that determines a move's strength based on stats. Also a method to gain experience.

=== Status ===

started, not sure how far along it is.

== public class Move ==

=== Description ===

This class will store:
  * power
  * animation
  * element
  * name
  * accuracy

Methods that access these data values.

=== Status ===

Non started yet.

== public class Character ==

== public class Trainer extends NPC ==

== public class NPC ==

== public class GymLeader extends Trainer ==

== public enum Element ==

=== Description ===

Defines the different elements of pokemon. Has methods like `double getMultiplierAgainst(Element other)` to get the attack multiplier

=== Status ===

completed, unless we decide to update to gold/silver/more recent